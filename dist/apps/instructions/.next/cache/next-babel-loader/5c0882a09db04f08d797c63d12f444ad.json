{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { FormControlLabel, MenuList, MenuItem, Typography, Collapse } from '@material-ui/core';\nimport { Toggle } from '@mono-nx-test-with-nextjs/ui';\nimport CheckboxIcon from './checkboxIcon';\nimport SeeMore from './seeMore';\nconst useStyles = makeStyles(theme => createStyles({\n  filterItem: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    marginBottom: '20px'\n  },\n  menuItem: {\n    padding: '0 0 0 25px'\n  },\n  menuLabel: {\n    padding: '0 20px 4px'\n  },\n  menuList: {\n    padding: '0 0 2px'\n  },\n  category: {\n    fontWeight: 'bold'\n  }\n}));\nexport const FilterItem = ({\n  data = [],\n  checkedList = {},\n  onChange = null\n}) => {\n  const {\n    0: collapsedIds,\n    1: setCollapsedId\n  } = useState({});\n  const classes = useStyles();\n\n  const handleSeeMoreToggle = (newState, id) => {\n    setCollapsedId(_objectSpread(_objectSpread({}, collapsedIds), {}, {\n      [id]: newState\n    }));\n  };\n\n  const menuItems = Array.isArray(data) ? data : [data];\n  return __jsx(React.Fragment, null, menuItems.map(({\n    category,\n    items,\n    collapseItems\n  }) => __jsx(\"div\", {\n    key: category\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    component: \"h6\",\n    className: `${classes.menuLabel} ${classes.category}`\n  }, category), __jsx(Collapse, {\n    in: collapsedIds[category],\n    collapsedHeight: 75\n  }, __jsx(MenuList, {\n    className: classes.menuList\n  }, items.map(label => {\n    return __jsx(MenuItem, {\n      className: classes.menuItem,\n      key: `${category}${label}`\n    }, __jsx(FormControlLabel, {\n      control: __jsx(Toggle, {\n        onChange: onChange,\n        id: label,\n        reset: Object.keys(checkedList).length === 0\n      }, __jsx(CheckboxIcon, {\n        checked: checkedList[label] || false\n      })),\n      label: label\n    }));\n  }))), __jsx(Toggle, {\n    onChange: handleSeeMoreToggle,\n    id: category\n  }, collapseItems && __jsx(SeeMore, {\n    open: collapsedIds[category]\n  })))));\n};\nexport default FilterItem;","map":{"version":3,"sources":["/Users/jdslima/Desktop/wtcomm-fe-tech-test-Jon-Souzal/apps/fe-wtc-tech-test/app/components/filterItem/index.tsx"],"names":["React","useState","makeStyles","createStyles","FormControlLabel","MenuList","MenuItem","Typography","Collapse","Toggle","CheckboxIcon","SeeMore","useStyles","theme","filterItem","display","flexDirection","justifyContent","marginBottom","menuItem","padding","menuLabel","menuList","category","fontWeight","FilterItem","data","checkedList","onChange","collapsedIds","setCollapsedId","classes","handleSeeMoreToggle","newState","id","menuItems","Array","isArray","map","items","collapseItems","label","Object","keys","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport {\n  FormControlLabel,\n  MenuList,\n  MenuItem,\n  Typography,\n  Collapse,\n} from '@material-ui/core';\nimport { Toggle } from '@mono-nx-test-with-nextjs/ui';\nimport {\n  MenuData,\n  CollapsedIdsObj,\n} from '@mono-nx-test-with-nextjs/fe-wtc-tech-test';\nimport CheckboxIcon from './checkboxIcon';\nimport SeeMore from './seeMore';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    filterItem: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      marginBottom: '20px',\n    },\n    menuItem: {\n      padding: '0 0 0 25px',\n    },\n    menuLabel: {\n      padding: '0 20px 4px',\n    },\n    menuList: {\n      padding: '0 0 2px',\n    },\n    category: {\n      fontWeight: 'bold',\n    },\n  })\n);\n\nexport const FilterItem = ({\n  data = [],\n  checkedList = {},\n  onChange = null,\n}: {\n  data: MenuData[];\n  checkedList: CollapsedIdsObj;\n  onChange: (newState: boolean, id: string) => void;\n}) => {\n  const [collapsedIds, setCollapsedId] = useState<CollapsedIdsObj>({});\n  const classes = useStyles();\n  const handleSeeMoreToggle = (newState, id) => {\n    setCollapsedId({ ...collapsedIds, [id]: newState });\n  };\n\n  const menuItems = Array.isArray(data) ? data : [data];\n\n  return (\n    <>\n      {menuItems.map(({ category, items, collapseItems }) => (\n        <div key={category}>\n          <Typography\n            variant=\"body1\"\n            component=\"h6\"\n            className={`${classes.menuLabel} ${classes.category}`}\n          >\n            {category}\n          </Typography>\n          <Collapse in={collapsedIds[category]} collapsedHeight={75}>\n            <MenuList className={classes.menuList}>\n              {items.map((label) => {\n                return (\n                  <MenuItem\n                    className={classes.menuItem}\n                    key={`${category}${label}`}\n                  >\n                    <FormControlLabel\n                      control={\n                        <Toggle\n                          onChange={onChange}\n                          id={label}\n                          reset={Object.keys(checkedList).length === 0}\n                        >\n                          <CheckboxIcon checked={checkedList[label] || false} />\n                        </Toggle>\n                      }\n                      label={label}\n                    />\n                  </MenuItem>\n                );\n              })}\n            </MenuList>\n          </Collapse>\n          <Toggle onChange={handleSeeMoreToggle} id={category}>\n            {collapseItems && <SeeMore open={collapsedIds[category]} />}\n          </Toggle>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default FilterItem;\n"]},"metadata":{},"sourceType":"module"}