{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { DetailsBox } from '@mono-nx-test-with-nextjs/ui';\nexport const Tasks = ({\n  children,\n  summary,\n  extraTasks = null,\n  additionalInfo = null\n}) => __jsx(DetailsBox, {\n  summaryDescription: summary\n}, children, extraTasks && extraTasks.map(task => task), __jsx(Notes, {\n  additionalInfo: additionalInfo\n}));\nexport const Notes = ({\n  additionalInfo = null\n}) => {\n  return __jsx(React.Fragment, null, __jsx(\"h5\", null, \"Notes & useful links:\"), __jsx(\"ul\", null, __jsx(\"li\", null, __jsx(\"a\", {\n    href: \"/assets/design/fe_movies_tech_test.pdf\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, \"Design\")), __jsx(\"li\", null, __jsx(\"a\", {\n    href: \"http://localhost:3333/swagger-doc\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, \"API swagger doc\")), additionalInfo && additionalInfo.map(info => __jsx(\"li\", {\n    key: info\n  }, info))));\n};\nexport const FetchAllMovies = ({\n  extraTasks = []\n}) => {\n  return __jsx(Tasks, {\n    summary: `Fetch all movies`\n  }, __jsx(\"p\", null, \"As a user, I want to see the list of all movies, so I can see what is available. At the top of the page, I want to see the total number of movies fetched.\"), __jsx(\"p\", null, \"As a user, I want to be able to see a movie represented as a card which has the movie's poster in the center and its rating at the bottom.\"), __jsx(\"p\", null, \"The rating is calculated as the average of the 3 values present in the \\\"Ratings\\\" property (from the API).\"), __jsx(\"pre\", null, '3 <= rating <= 3.49    -----> 3 stars'), __jsx(\"pre\", null, '3.50 <= rating <= 3.99 -----> 3.5 stars'), __jsx(\"h5\", null, \"Tasks\"), __jsx(\"ol\", null, __jsx(\"li\", null, __jsx(\"p\", null, \"Fetch the list of movies from the API\")), __jsx(\"li\", null, __jsx(\"p\", null, \"Create the card component\")), extraTasks && extraTasks.map((task, index) => __jsx(\"li\", {\n    key: index\n  }, task))));\n};\nexport const CardsState = __jsx(\"div\", {\n  key: 'cardsState'\n}, __jsx(\"p\", null, \"At the top of the card, I want 2 icons that will allow me to save a movie in my watch list and keep track of which movie I have already seen. Additionally, upon clicking, the background's color of the movie's card will change, so I can use colors to easily identify their states.\"), __jsx(\"b\", null, __jsx(\"p\", null, \"There are 4 different states:\")), __jsx(\"ol\", null, __jsx(\"li\", null, __jsx(\"ul\", null, __jsx(\"li\", null, \"Watched: false\"), __jsx(\"li\", null, \"Saved: false\"), __jsx(\"li\", null, \"Background color: #FFF\"))), __jsx(\"li\", null, __jsx(\"ul\", null, __jsx(\"li\", null, \"Watched: false\"), __jsx(\"li\", null, \"Saved:true\"), __jsx(\"li\", null, \"Background color: #ED6606\"))), __jsx(\"li\", null, __jsx(\"ul\", null, __jsx(\"li\", null, \"Watched: true\"), __jsx(\"li\", null, \"Saved: false\"), __jsx(\"li\", null, \"Background color: #EEC907\"))), __jsx(\"li\", null, __jsx(\"ul\", null, __jsx(\"li\", null, \"Watched: true\"), __jsx(\"li\", null, \"Saved: true\"), __jsx(\"li\", null, \"Background color: #049452\")))));","map":{"version":3,"sources":["/Users/jdslima/Desktop/wtcomm-fe-tech-test-Jon-Souzal/apps/instructions/app/components/tests/common.tsx"],"names":["Tasks","extraTasks","additionalInfo","summary","task","Notes","info","FetchAllMovies","index","CardsState"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { DetailsBox } from '@mono-nx-test-with-nextjs/ui';\n\nexport const Tasks = ({\n  children,\n  summary,\n  extraTasks = null,\n  additionalInfo = null,\n}) => (\n  <DetailsBox summaryDescription={summary}>\n    {children}\n    {extraTasks && extraTasks.map((task) => task)}\n    <Notes additionalInfo={additionalInfo} />\n  </DetailsBox>\n);\n\nexport const Notes = ({ additionalInfo = null }) => {\n  return (\n    <>\n      <h5>Notes & useful links:</h5>\n      <ul>\n        <li>\n          <a\n            href=\"/assets/design/fe_movies_tech_test.pdf\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Design\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"http://localhost:3333/swagger-doc\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            API swagger doc\n          </a>\n        </li>\n        {additionalInfo &&\n          additionalInfo.map((info) => <li key={info}>{info}</li>)}\n      </ul>\n    </>\n  );\n};\n\nexport const FetchAllMovies = ({ extraTasks = [] }) => {\n  return (\n    <Tasks summary={`Fetch all movies`}>\n      <p>\n        As a user, I want to see the list of all movies, so I can see what is\n        available. At the top of the page, I want to see the total number of\n        movies fetched.\n      </p>\n      <p>\n        As a user, I want to be able to see a movie represented as a card which\n        has the movie's poster in the center and its rating at the bottom.\n      </p>\n      <p>\n        The rating is calculated as the average of the 3 values present in the\n        \"Ratings\" property (from the API).\n      </p>\n      <pre>{'3 <= rating <= 3.49    -----> 3 stars'}</pre>\n      <pre>{'3.50 <= rating <= 3.99 -----> 3.5 stars'}</pre>\n      <h5>Tasks</h5>\n      <ol>\n        <li>\n          <p>Fetch the list of movies from the API</p>\n        </li>\n        <li>\n          <p>Create the card component</p>\n        </li>\n        {extraTasks &&\n          extraTasks.map((task, index) => <li key={index}>{task}</li>)}\n      </ol>\n    </Tasks>\n  );\n};\n\nexport const CardsState = (\n  <div key={'cardsState'}>\n    <p>\n      At the top of the card, I want 2 icons that will allow me to save a movie\n      in my watch list and keep track of which movie I have already seen.\n      Additionally, upon clicking, the background's color of the movie's card\n      will change, so I can use colors to easily identify their states.\n    </p>\n    <b>\n      <p>There are 4 different states:</p>\n    </b>\n    <ol>\n      <li>\n        <ul>\n          <li>Watched: false</li>\n          <li>Saved: false</li>\n          <li>Background color: #FFF</li>\n        </ul>\n      </li>\n      <li>\n        <ul>\n          <li>Watched: false</li>\n          <li>Saved:true</li>\n          <li>Background color: #ED6606</li>\n        </ul>\n      </li>\n      <li>\n        <ul>\n          <li>Watched: true</li>\n          <li>Saved: false</li>\n          <li>Background color: #EEC907</li>\n        </ul>\n      </li>\n      <li>\n        <ul>\n          <li>Watched: true</li>\n          <li>Saved: true</li>\n          <li>Background color: #049452</li>\n        </ul>\n      </li>\n    </ol>\n  </div>\n);\n"]},"metadata":{},"sourceType":"module"}