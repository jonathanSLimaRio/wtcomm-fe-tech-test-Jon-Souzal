{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { useState } from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { Paper } from '@material-ui/core';\nimport { Button } from '@mono-nx-test-with-nextjs/ui';\nimport { FilterItem } from '@mono-nx-test-with-nextjs/fe-wtc-tech-test';\nconst useStyles = makeStyles(theme => createStyles({\n  filterMenu: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    marginBottom: '20px'\n  },\n  paper: {\n    borderRadius: '20px',\n    backgroundColor: theme.palette.primary.main,\n    color: 'white',\n    padding: '13px 0 5px'\n  },\n  cardsContainer: {\n    display: 'grid',\n    gridTemplateColumns: 'min(232px) auto',\n    columnGap: '25px'\n  },\n  resetFilters: {\n    display: 'flex',\n    color: theme.palette.common.black,\n    fontWeight: 'bold',\n    fontSize: '1rem',\n    backgroundColor: theme.palette.common.white,\n    margin: '0 auto 20px',\n    borderRadius: '10px',\n    minWidth: '200px'\n  }\n}));\nexport const FilterMenu = ({\n  data = [],\n  onChange = null\n}) => {\n  const {\n    0: checkedBoxesList,\n    1: setCheckedBoxesListSetList\n  } = useState({});\n\n  const handleOnChange = (newCheckboxState, id) => {\n    const newState = _objectSpread(_objectSpread({}, checkedBoxesList), {}, {\n      [id]: newCheckboxState\n    });\n\n    setCheckedBoxesListSetList(newState);\n    onChange(newState);\n  };\n\n  const handleReset = () => setCheckedBoxesListSetList({});\n\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.filterMenu\n  }, __jsx(\"div\", {\n    className: classes.cardsContainer\n  }, __jsx(Paper, {\n    className: classes.paper\n  }, __jsx(Button, {\n    variant: \"contained\",\n    className: classes.resetFilters,\n    onClick: handleReset\n  }, \"Reset Filters\"), __jsx(FilterItem, {\n    data: data,\n    onChange: handleOnChange,\n    checkedList: checkedBoxesList\n  }))));\n};\nexport default FilterMenu;","map":{"version":3,"sources":["/Users/jdslima/Desktop/wtcomm-fe-tech-test-Jon-Souzal/apps/fe-wtc-tech-test/app/components/filterMenu/index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","filterMenu","display","flexDirection","justifyContent","marginBottom","paper","borderRadius","backgroundColor","color","padding","cardsContainer","gridTemplateColumns","columnGap","resetFilters","fontWeight","fontSize","margin","minWidth","FilterMenu","data","onChange","setCheckedBoxesListSetList","useState","handleOnChange","newState","newCheckboxState","handleReset","classes","checkedBoxesList"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { Paper } from '@material-ui/core';\nimport { Button } from '@mono-nx-test-with-nextjs/ui';\nimport { FilterItem } from '@mono-nx-test-with-nextjs/fe-wtc-tech-test';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    filterMenu: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      marginBottom: '20px',\n    },\n    paper: {\n      borderRadius: '20px',\n      backgroundColor: theme.palette.primary.main,\n      color: 'white',\n      padding: '13px 0 5px',\n    },\n    cardsContainer: {\n      display: 'grid',\n      gridTemplateColumns: 'min(232px) auto',\n      columnGap: '25px',\n    },\n    resetFilters: {\n      display: 'flex',\n      color: theme.palette.common.black,\n      fontWeight: 'bold',\n      fontSize: '1rem',\n      backgroundColor: theme.palette.common.white,\n      margin: '0 auto 20px',\n      borderRadius: '10px',\n      minWidth: '200px',\n    },\n  })\n);\n\nexport type MenuData = {\n  category: string;\n  items: string[];\n  collapseItems: boolean;\n};\n\nexport type CollapsedIdsObj = {\n  [category: string]: boolean;\n};\n\nexport const FilterMenu = ({\n  data = [],\n  onChange = null,\n}: {\n  data: MenuData[];\n  onChange: (list: CollapsedIdsObj) => void;\n}) => {\n  const [checkedBoxesList, setCheckedBoxesListSetList] = useState<\n    CollapsedIdsObj\n  >({});\n\n  const handleOnChange = (newCheckboxState, id) => {\n    const newState = { ...checkedBoxesList, [id]: newCheckboxState };\n    setCheckedBoxesListSetList(newState);\n    onChange(newState);\n  };\n\n  const handleReset = () => setCheckedBoxesListSetList({});\n\n  const classes = useStyles();\n  return (\n    <div className={classes.filterMenu}>\n      <div className={classes.cardsContainer}>\n        <Paper className={classes.paper}>\n          <Button\n            variant=\"contained\"\n            className={classes.resetFilters}\n            onClick={handleReset}\n          >\n            Reset Filters\n          </Button>\n          <FilterItem\n            data={data}\n            onChange={handleOnChange}\n            checkedList={checkedBoxesList}\n          />\n        </Paper>\n      </div>\n    </div>\n  );\n};\n\nexport default FilterMenu;\n"]},"metadata":{},"sourceType":"module"}